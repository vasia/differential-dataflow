(function() {var implementors = {};
implementors["abomonation"] = [];
implementors["differential_dataflow"] = ["impl&lt;T:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> + <a class=\"trait\" href=\"differential_dataflow/hashable/trait.Hashable.html\" title=\"trait differential_dataflow::hashable::Hashable\">Hashable</a> + <a class=\"trait\" href=\"abomonation/trait.Abomonation.html\" title=\"trait abomonation::Abomonation\">Abomonation</a>&gt; <a class=\"trait\" href=\"abomonation/trait.Abomonation.html\" title=\"trait abomonation::Abomonation\">Abomonation</a> for <a class=\"struct\" href=\"differential_dataflow/hashable/struct.OrdWrapper.html\" title=\"struct differential_dataflow::hashable::OrdWrapper\">OrdWrapper</a>&lt;T&gt;","impl&lt;T:&nbsp;<a class=\"trait\" href=\"differential_dataflow/hashable/trait.Hashable.html\" title=\"trait differential_dataflow::hashable::Hashable\">Hashable</a> + <a class=\"trait\" href=\"abomonation/trait.Abomonation.html\" title=\"trait abomonation::Abomonation\">Abomonation</a>&gt; <a class=\"trait\" href=\"abomonation/trait.Abomonation.html\" title=\"trait abomonation::Abomonation\">Abomonation</a> for <a class=\"struct\" href=\"differential_dataflow/hashable/struct.HashableWrapper.html\" title=\"struct differential_dataflow::hashable::HashableWrapper\">HashableWrapper</a>&lt;T&gt;","impl&lt;T:&nbsp;<a class=\"trait\" href=\"timely_sort/trait.Unsigned.html\" title=\"trait timely_sort::Unsigned\">Unsigned</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"differential_dataflow/hashable/trait.Hashable.html\" title=\"trait differential_dataflow::hashable::Hashable\">Hashable</a> + <a class=\"trait\" href=\"abomonation/trait.Abomonation.html\" title=\"trait abomonation::Abomonation\">Abomonation</a>&gt; <a class=\"trait\" href=\"abomonation/trait.Abomonation.html\" title=\"trait abomonation::Abomonation\">Abomonation</a> for <a class=\"struct\" href=\"differential_dataflow/hashable/struct.UnsignedWrapper.html\" title=\"struct differential_dataflow::hashable::UnsignedWrapper\">UnsignedWrapper</a>&lt;T&gt;","impl&lt;T&gt; <a class=\"trait\" href=\"abomonation/trait.Abomonation.html\" title=\"trait abomonation::Abomonation\">Abomonation</a> for <a class=\"struct\" href=\"differential_dataflow/operators/arrange/struct.BatchWrapper.html\" title=\"struct differential_dataflow::operators::arrange::BatchWrapper\">BatchWrapper</a>&lt;T&gt;","impl&lt;R1:&nbsp;<a class=\"trait\" href=\"differential_dataflow/difference/trait.Diff.html\" title=\"trait differential_dataflow::difference::Diff\">Diff</a>, R2:&nbsp;<a class=\"trait\" href=\"differential_dataflow/difference/trait.Diff.html\" title=\"trait differential_dataflow::difference::Diff\">Diff</a>&gt; <a class=\"trait\" href=\"abomonation/trait.Abomonation.html\" title=\"trait abomonation::Abomonation\">Abomonation</a> for <a class=\"struct\" href=\"differential_dataflow/difference/struct.DiffPair.html\" title=\"struct differential_dataflow::difference::DiffPair\">DiffPair</a>&lt;R1, R2&gt;",];
implementors["timely"] = ["impl&lt;TOuter:&nbsp;<a class=\"trait\" href=\"abomonation/trait.Abomonation.html\" title=\"trait abomonation::Abomonation\">Abomonation</a>, TInner:&nbsp;<a class=\"trait\" href=\"abomonation/trait.Abomonation.html\" title=\"trait abomonation::Abomonation\">Abomonation</a>&gt; <a class=\"trait\" href=\"abomonation/trait.Abomonation.html\" title=\"trait abomonation::Abomonation\">Abomonation</a> for <a class=\"struct\" href=\"timely/progress/nested/product/struct.Product.html\" title=\"struct timely::progress::nested::product::Product\">Product</a>&lt;TOuter, TInner&gt;","impl <a class=\"trait\" href=\"abomonation/trait.Abomonation.html\" title=\"trait abomonation::Abomonation\">Abomonation</a> for <a class=\"struct\" href=\"timely/progress/timestamp/struct.RootTimestamp.html\" title=\"struct timely::progress::timestamp::RootTimestamp\">RootTimestamp</a>","impl&lt;T:&nbsp;<a class=\"trait\" href=\"abomonation/trait.Abomonation.html\" title=\"trait abomonation::Abomonation\">Abomonation</a>, D:&nbsp;<a class=\"trait\" href=\"abomonation/trait.Abomonation.html\" title=\"trait abomonation::Abomonation\">Abomonation</a>&gt; <a class=\"trait\" href=\"abomonation/trait.Abomonation.html\" title=\"trait abomonation::Abomonation\">Abomonation</a> for <a class=\"enum\" href=\"timely/dataflow/operators/capture/enum.Event.html\" title=\"enum timely::dataflow::operators::capture::Event\">Event</a>&lt;T, D&gt;","impl <a class=\"trait\" href=\"abomonation/trait.Abomonation.html\" title=\"trait abomonation::Abomonation\">Abomonation</a> for <a class=\"struct\" href=\"timely/logging/struct.OperatesEvent.html\" title=\"struct timely::logging::OperatesEvent\">OperatesEvent</a>","impl <a class=\"trait\" href=\"abomonation/trait.Abomonation.html\" title=\"trait abomonation::Abomonation\">Abomonation</a> for <a class=\"struct\" href=\"timely/logging/struct.ChannelsEvent.html\" title=\"struct timely::logging::ChannelsEvent\">ChannelsEvent</a>","impl <a class=\"trait\" href=\"abomonation/trait.Abomonation.html\" title=\"trait abomonation::Abomonation\">Abomonation</a> for <a class=\"struct\" href=\"timely/logging/struct.ProgressEvent.html\" title=\"struct timely::logging::ProgressEvent\">ProgressEvent</a>","impl <a class=\"trait\" href=\"abomonation/trait.Abomonation.html\" title=\"trait abomonation::Abomonation\">Abomonation</a> for <a class=\"struct\" href=\"timely/logging/struct.MessagesEvent.html\" title=\"struct timely::logging::MessagesEvent\">MessagesEvent</a>","impl <a class=\"trait\" href=\"abomonation/trait.Abomonation.html\" title=\"trait abomonation::Abomonation\">Abomonation</a> for <a class=\"enum\" href=\"timely/logging/enum.StartStop.html\" title=\"enum timely::logging::StartStop\">StartStop</a>","impl <a class=\"trait\" href=\"abomonation/trait.Abomonation.html\" title=\"trait abomonation::Abomonation\">Abomonation</a> for <a class=\"struct\" href=\"timely/logging/struct.ScheduleEvent.html\" title=\"struct timely::logging::ScheduleEvent\">ScheduleEvent</a>",];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        
})()
